---
- name: NFS Server | Mount Disk | Unencrypted | Install cryptsetup
  ansible.builtin.package:
      name: cryptsetup
      state: present

- name: NFS Server | Mount Disk | Unencrypted | Copy key file
  ansible.builtin.copy:
      content: "{{ cs_nfs_external_drive_luks_key_base64 | b64decode }}"
      dest: /root/.nfs-luks-key
      mode: "0000"
      remote_src: false

- name: NFS Server | Mount Disk | Unencrypted | Create mount point
  ansible.builtin.file:
      path: "{{ cs_nfs_external_drive_mount_path }}"
      state: directory
      mode: "0755"

- name: NFS Server | Mount Disk | Unencrypted | Add luks key
  community.crypto.luks_device:
      state: opened
      name: "{{ cs_nfs_external_drive_crypt_open_name }}"
      uuid: "{{ cs_nfs_external_drive_uuid }}"
      # keyfile: /root/.nfs-luks-key
      passphrase: "{{ cs_nfs_external_drive_luks_password }}"
      new_keyfile: /root/.nfs-luks-key

- name: NFS Server | Mount Disk | Unencrypted | Add to crypttab
  ansible.builtin.lineinfile:
      path: /etc/crypttab
      line: "{{ cs_nfs_external_drive_crypt_open_name }} UUID={{ cs_nfs_external_drive_uuid }} /root/.nfs-luks-key luks"
      create: true
      mode: "0644"
      owner: root
      group: root
      regexp: "^{{ cs_nfs_external_drive_crypt_open_name }}"

- name: NFS Server | Mount Disk | Unencrypted | Remove from fstab
  ansible.builtin.lineinfile:
      path: /etc/fstab
      regexp: "^/dev/mapper/{{ cs_nfs_external_drive_crypt_open_name }}.*"
      state: absent

- name: NFS Server | Mount Disk | Unencrypted | Mount
  ansible.posix.mount:
      src: /dev/mapper/{{ cs_nfs_external_drive_crypt_open_name }}
      path: "{{ cs_nfs_external_drive_mount_path }}"
      fstype: ext4
      state: mounted
      boot: true
      opts: defaults,noatime,nofail
      dump: 0
      passno: 2

- name: NFS Server | Mount Disk | Unencrypted | Perform systemd daemon-reload
  ansible.builtin.systemd_service:
      daemon_reload: true

- name: "NFS Server | Mount Disk | Unencrypted | Check for self uuid file
      {{ cs_nfs_external_drive_mount_path + '/' + cs_nfs_external_drive_uuid }}"
  ansible.builtin.stat:
      path: "{{ cs_nfs_external_drive_mount_path }}/{{ cs_nfs_external_drive_uuid }}"
  register: uuid_file
  failed_when: not uuid_file.stat.exists

- name: NFS Server | Mount Disk | Unencrypted | Install nfs server
  ansible.builtin.package:
      name: nfs-kernel-server
      state: present

- name: NFS Server | Mount Disk | Unencrypted | Add to exports
  ansible.builtin.lineinfile:
      path: /etc/exports
      line: "{{ cs_nfs_external_drive_mount_path }} {{ cs_nfs_client_ips
          | join('(rw,sync,no_subtree_check,no_root_squash) ') }}(rw,sync,no_subtree_check,no_root_squash)"
      create: true
      mode: "0644"
      owner: root
      group: root
      regexp: "^{{ cs_nfs_external_drive_mount_path }}"

- name: NFS Server | Mount Disk | Unencrypted | Export
  ansible.builtin.command:
      cmd: "exportfs -a"
  changed_when: true

- name: NFS Server | Mount Disk | Unencrypted | Restart nfs server
  ansible.builtin.systemd_service:
      name: nfs-kernel-server
      state: restarted
      enabled: true

# "ufw allow from {{ item }} to any port nfs"
- name: NFS Server | Mount Disk | Unencrypted | Enable UFW
  community.general.ufw:
      rule: allow
      from_ip: "{{ item }}"
      state: enabled
      port: nfs
      comment: "Allow NFS Server port, Managed by Ansible home-lab playbook."
  with_items: "{{ cs_nfs_client_ips }}"
  when: cs_nfs_client_ips | length > 0
