---
- name: Nextcloud | Install | Check if Nextcloud config.php exists
  ansible.builtin.stat:
      path: "{{ cs_nc_web_dir }}/occ"
  register: is_nc_www_config_php_present

- name: Nextcloud | Install | Download New
  when: not is_nc_www_config_php_present.stat.exists
  block:
      - name: Nextcloud | Install | Download New | Download Nextcloud {{ cs_nc_version }}
        ansible.builtin.get_url:
            url: "https://download.nextcloud.com/server/releases/nextcloud-{{ cs_nc_version }}.zip"
            dest: "/tmp/nextcloud-{{ cs_nc_version }}.zip"
            mode: "0644"
            checksum: "sha512:{{ cs_nc_version_sha512 }}"

      - name: Nextcloud | Install | Download New | Create unzip directory and web directory
        ansible.builtin.file:
            path: /tmp/nextcloud-{{ cs_nc_version }}
            state: directory
            mode: "0755"

      - name: Nextcloud | Install | Download New | Unzip Nextcloud
        ansible.builtin.unarchive:
            src: "/tmp/nextcloud-{{ cs_nc_version }}.zip"
            dest: "/tmp/nextcloud-{{ cs_nc_version }}"
            remote_src: true
            creates: "/tmp/nextcloud-{{ cs_nc_version }}/index.php"
            mode: "0644"
            owner: "{{ cs_nc_run_user }}"
            group: "{{ cs_nc_run_group }}"

      - name: Nextcloud | Install | Download New | Copy Nextcloud to {{ cs_nc_web_dir }}
        ansible.builtin.copy:
            src: "/tmp/nextcloud-{{ cs_nc_version }}/nextcloud/"
            dest: "{{ cs_nc_web_dir }}/"
            remote_src: true
            owner: "{{ cs_nc_run_user }}"
            group: "{{ cs_nc_run_group }}"
            mode: "0755"

      - name: Nextcloud | Install | Download New | Reset permissions and ownership
        ansible.builtin.shell:
            cmd: |+
                set -euo pipefail;
                find {{ cs_nc_web_dir }}/ -type d -exec chmod 0750 {} \;
                find {{ cs_nc_web_dir }}/ -type f -exec chmod 0640 {} \;
                chown -R {{ cs_nc_run_user }}:{{ cs_nc_run_group }} {{ cs_nc_web_dir }};
            executable: /bin/bash
        changed_when: true

      - name: Nextcloud | Install | Download New | Remove AD
        ansible.builtin.command:
            cmd: truncate -s 0 {{ cs_nc_web_dir }}/apps/settings/templates/settings/personal/development.notice.php
        changed_when: true
  rescue:
      - name: Nextcloud | Install | Download New | Fail | Cleanup
        ansible.builtin.file:
            path: "{{ item }}"
            state: absent
            force: true
        with_items:
            - "/tmp/nextcloud-{{ cs_nc_version }}.zip"
            - "/tmp/nextcloud-{{ cs_nc_version }}"
            - "{{ cs_nc_web_dir }}"

      - name: Nextcloud | Install | Download New | Fail
        ansible.builtin.fail:
            msg: "Failed to download/install Nextcloud {{ cs_nc_version }}
                Please check the logs for more information"

- name: Nextcloud | Install | Create Nextcloud directory
  ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: "0750"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
  with_items:
      - "{{ cs_nc_data_dir }}"
      - "{{ cs_nc_cert_dir }}"
      - "{{ cs_nc_root_ca_chain_pem_file | dirname }}"
      - "{{ cs_nc_log_file | dirname }}"
      - "{{ cs_nc_db_cert_dir }}"
      - "{{ cs_nc_db_cert_pem_file | dirname }}"
      - "{{ cs_nc_db_privkey_pem_file | dirname }}"
      - "{{ cs_nc_db_chain_pem_file | dirname }}"
      - "{{ cs_nc_db_cert_csr_file | dirname }}"

- name: Nextcloud | Install | Copy icons
  ansible.builtin.copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: "0640"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
  with_items:
      - src: files/nc/favicon.svg
        dest: /tmp/nc-favicon.ico
      - src: files/nc/logo.png
        dest: /tmp/nc-logo.png
      - src: files/nc/logoheader.png
        dest: /tmp/nc-logoheader.png
      - src: files/nc/background.jpg
        dest: /tmp/nc-background.jpg

- name: Nextcloud | Install | Reset permissions and ownership
  ansible.builtin.shell:
      cmd: |+
          set -euo pipefail;
          find {{ cs_nc_data_dir }}/ -type d -exec chmod 0750 {} \;
          find {{ cs_nc_data_dir }}/ -type f -exec chmod 0640 {} \;
          chown -R {{ cs_nc_run_user }}:{{ cs_nc_run_group }} {{ cs_nc_data_dir }};
      executable: /bin/bash
  changed_when: true

- name: Nextcloud | Install | Get DB Details
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      engine_mount_point: "managed-secrets"
      path: "postgresql/clusters/{{ cs_nc_db_cluster_name }}/servers/{{ cs_nc_db_cluster_node }}/db/{{
          cs_nc_db_database }}"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
  register: __nextcloud_db_details
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Nextcloud | Install | Set db fact
  ansible.builtin.set_fact:
      cs_nc_db_user: "{{ __nextcloud_db_details.secret.user }}"
      cs_nc_db_password: "{{ __nextcloud_db_details.secret.password }}"
      cs_nc_db_host: "{{ __nextcloud_db_details.secret.fqdn }}"
      cs_nc_db_port: "{{ __nextcloud_db_details.secret.server_port }}"

- name: Nextcloud | Install | Get Db client certificate
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: pki/issue/client_certificate
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
      data:
          common_name: "{{ cs_nc_db_user }}"
  register: __nextcloud_db_client_certificate
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Nextcloud | Install | Write DB client certificate to disk
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      mode: "0600"
  loop:
      - content: "{{ __nextcloud_db_client_certificate.data.data.certificate }}\n\
            {{ __nextcloud_db_client_certificate.data.data.ca_chain | join('\n') }}"
        dest: "{{ cs_nc_db_cert_pem_file }}"
      - content: "{{ __nextcloud_db_client_certificate.data.data.private_key }}"
        dest: "{{ cs_nc_db_privkey_pem_file }}"
      - content: "{{ __nextcloud_db_client_certificate.data.data.ca_chain | join('\n') }}"
        dest: "{{ cs_nc_db_chain_pem_file }}"
      - content: "{{ __nextcloud_db_client_certificate.data.data.ca_chain | last }}"
        dest: "{{ cs_nc_root_ca_chain_pem_file }}"

- name: Nextcloud | Install | Install python3-psycopg2
  ansible.builtin.apt:
      name: python3-psycopg2

- name: Nextcloud | Install | Test if Postgres is up
  become: true
  become_user: "{{ cs_nc_run_user }}"
  community.postgresql.postgresql_ping:
      login_host: "{{ cs_nc_db_host }}"
      login_password: "{{ cs_nc_db_password }}"
      login_user: "{{ cs_nc_db_user }}"
      login_port: "{{ cs_nc_db_port }}"
      login_db: "{{ cs_nc_db_database }}"
      ssl_mode: verify-full
      ssl_rootcert: "{{ cs_nc_db_chain_pem_file }}"
      ssl_cert: "{{ cs_nc_db_cert_pem_file }}"
      ssl_key: "{{ cs_nc_db_privkey_pem_file }}"
  register: is_postgres_up
  until: is_postgres_up.is_available
  retries: 30
  delay: 3

- name: Nextcloud | Install | Check if Nextcloud is installed
  ansible.builtin.stat:
      path: "{{ cs_nc_web_dir }}/config/CAN_INSTALL"
  register: is_nc_occ_installed

- name: Nextcloud | Install | Get Config details
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: "{{ cs_nc_cluster_name }}/{{ inventory_hostname }}/nextcloud"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
      engine_mount_point: "secret"
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"
  register: __nextcloud_app_details

- name: Nextcloud | Install | Set config facts
  ansible.builtin.set_fact:
      cs_nc_port: "{{ __nextcloud_app_details.secret.port }}"
      cs_nc_admin_user: "{{ __nextcloud_app_details.secret.admin_user }}"
      cs_nc_admin_password: "{{ __nextcloud_app_details.secret.admin_password }}"

- name: Nextcloud | Install | Install Nextcloud for the first time
  when: is_nc_occ_installed.stat.exists
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ maintenance:install --database 'pgsql' --database-name '{{ cs_nc_db_database }}'
          --database-user '{{ cs_nc_db_user }}' --database-pass '{{ cs_nc_db_password }}'
          --database-host '{{ cs_nc_db_host }};port={{ cs_nc_db_port }};\
          sslmode=verify-full;sslrootcert={{ cs_nc_db_chain_pem_file }};sslcert={{ cs_nc_db_cert_pem_file }};\
          sslkey={{ cs_nc_db_privkey_pem_file }}'
          --admin-user '{{ cs_nc_admin_user }}' --admin-pass '{{ cs_nc_admin_password }}'
          --data-dir '{{ cs_nc_data_dir }}' --no-interaction"
      chdir: "{{ cs_nc_web_dir }}"
  register: nc_install_output
  changed_when: true

- name: Nextcloud | Install | DB user String
  ansible.builtin.lineinfile:
      path: "{{ cs_nc_web_dir }}/config/config.php"
      line: "  'dbuser' => '{{ cs_nc_db_user }}',"
      mode: "0640"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      insertafter: "^  'dbtableprefix' =>.*"
      regexp: "^  'dbuser' => '.*"

- name: Nextcloud | Install | DB password String
  ansible.builtin.lineinfile:
      path: "{{ cs_nc_web_dir }}/config/config.php"
      line: "  'dbpassword' => '{{ cs_nc_db_password }}',"
      mode: "0640"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      insertafter: "^  'dbuser' =>.*"
      regexp: "^  'dbpassword' => '.*"

- name: Nextcloud | Install | DB host String
  ansible.builtin.lineinfile:
      path: "{{ cs_nc_web_dir }}/config/config.php"
      line: "  'dbhost' => '{{ cs_nc_db_host }};port={{ cs_nc_db_port }};sslmode=verify-full;sslrootcert={{
          cs_nc_db_chain_pem_file }};sslcert={{ cs_nc_db_cert_pem_file }};sslkey={{ cs_nc_db_privkey_pem_file }}',"
      mode: "0640"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      insertafter: "^  'dbname' =>.*"
      regexp: "^  'dbhost' => '.*"

- name: Nextcloud | Install | Get Status
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ status --output=json"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: false
  register: nc_status

- name: Nextcloud | Install | Test if Nextcloud is installed correctly
  ansible.builtin.assert:
      that:
          - nc_current_status.installed
          - nc_current_status.versionstring == cs_nc_version
          - not nc_current_status.needsDbUpgrade
      fail_msg: "Nextcloud is not installed correctly {{ nc_current_status }}"
      success_msg: "Nextcloud is installed"
  vars:
      nc_current_status: "{{ nc_status.stdout | from_json }}"

- name: Nextcloud | Install | Enable Featured Apps encryption admin_audit bruteforcesettings files_external
      suspicious_login twofactor_totp user_ldap
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ app:enable encryption admin_audit bruteforcesettings files_external suspicious_login
          twofactor_totp user_ldap"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Enable encryption
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "encryption:enable"
      - "encryption:enable-master-key"

- name: Nextcloud | Install | Disable web update
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set upgrade.disable-web --value true --type boolean"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set release channel to stable
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set updater.release.channel --value stable"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: false

- name: Nextcloud | Install | Import Ownca CA certificate
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ security:certificates:import {{ cs_nc_root_ca_chain_pem_file }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Gather facts
  ansible.builtin.setup:

- name: Nextcloud | Install | Delete Trusted Domains
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:delete trusted_domains"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set Trusted Domains
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set trusted_domains {{ item_index }} --value={{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  loop_control:
      index_var: item_index
  with_items: "{{ ([ansible_fqdn, ansible_hostname] + ansible_all_ipv4_addresses) }}"

- name: Nextcloud | Install | Add missing indices
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ db:add-missing-indices"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set log config
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set log_type --value file"
      - "config:system:set logfile --value '{{ cs_nc_log_file }}'"
      - "config:system:set logfile_audit --value '{{ cs_nc_log_file }}'"
      - "config:system:set log.condition apps 0 --value=admin_audit"
      - "config:system:set log_rotate_size --value 10485760"
      - "config:app:set admin_audit logfile --value={{ cs_nc_log_file }}"
      - "config:system:set loglevel --value 2"
      - "config:system:set logdateformat --value 'Y-m-d H:i:s'"

- name: Nextcloud | Install | Set locals
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set logtimezone --value '{{ cs_nc_logtimezone }}'"
      - "config:system:set default_phone_region --value '{{ cs_nc_default_phone_region }}'"
      - "config:system:set default_language --value en"
      - "config:system:set default_locale --value en_IN"

- name: Nextcloud | Install | Get bot email from vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      engine_mount_point: "secret"
      path: "bot_email"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
  register: __nextcloud_server_bot_email
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Nextcloud | Install | Set fact Public Ingress IP and Hostname
  ansible.builtin.set_fact:
      cs_nc_mail_smtpmode: "{{ __nextcloud_server_bot_email.secret.smtpmode }}"
      cs_nc_mail_sendmailmode: "{{ __nextcloud_server_bot_email.secret.sendmailmode }}"
      cs_nc_mail_smtpport: "{{ __nextcloud_server_bot_email.secret.smtpport }}"
      cs_nc_mail_from_address: "{{ __nextcloud_server_bot_email.secret.from_address }}"
      cs_nc_mail_domain: "{{ __nextcloud_server_bot_email.secret.domain }}"
      cs_nc_mail_smtpsecure: "{{ __nextcloud_server_bot_email.secret.smtpsecure }}"
      cs_nc_mail_smtphost: "{{ __nextcloud_server_bot_email.secret.smtphost }}"
      cs_nc_mail_smtppassword: "{{ __nextcloud_server_bot_email.secret.smtppassword }}"

- name: Nextcloud | Install | Set email config
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set mail_smtpmode --value {{ cs_nc_mail_smtpmode }}"
      - "config:system:set mail_sendmailmode --value {{ cs_nc_mail_sendmailmode }}"
      - "config:system:set mail_smtpport --value {{ cs_nc_mail_smtpport }}"
      - "config:system:set mail_from_address --value {{ cs_nc_mail_from_address }}"
      - "config:system:set mail_domain --value {{ cs_nc_mail_domain }}"
      - "config:system:set mail_smtpsecure --value {{ cs_nc_mail_smtpsecure }}"
      - "config:system:set mail_smtpauth --value 1"
      - "config:system:set mail_smtphost --value {{ cs_nc_mail_smtphost }}"
      - "config:system:set mail_smtpname --value {{ cs_nc_mail_from_address }}@{{ cs_nc_mail_domain }}"
      - "config:system:set mail_smtppassword --value {{ cs_nc_mail_smtppassword }}"

- name: Nextcloud | Install | Set nextcloud maintenance window at 3 am
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set maintenance_window_start --type=integer --value=3"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set nextcloud url
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set overwrite.cli.url --value {{ cs_nc_protocol }}://127.0.0.1:{{ cs_nc_port }}"
      - "config:system:delete overwritehost"
      - "config:system:delete overwriteprotocol"
      - "config:system:set htaccess.RewriteBase --value /"

- name: Nextcloud | Install | Remove default skeleton and template directories
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set skeletondirectory --value ''"
      - "config:system:set templatedirectory --value ''"

- name: Nextcloud | Install | Set theming
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "theming:config name 'Home Server'"
      - "theming:config slogan 'Where bytes go to retire and data parties in pajamas!'"
      - "theming:config url '{{ cs_nc_protocol }}://{{ ansible_fqdn }}:{{ cs_nc_port }}'"
      - "theming:config color '#2C2222'"
      - "theming:config favicon '/tmp/nc-favicon.ico'"
      - "theming:config logo '/tmp/nc-logo.png'"
      - "theming:config logoheader '/tmp/nc-logoheader.png'"
      - "theming:config background '/tmp/nc-background.jpg'"
      - "theming:config disable-user-theming yes"

- name: Nextcloud | Install | Set theming for client apps
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:app:set theming AndroidClientUrl
        --value 'https://play.google.com/store/apps/details?id=com.nextcloud.client'"
      - "config:app:set theming iOSClientUrl --value 'https://itunes.apple.com/us/app/nextcloud/id1125420102?mt=8'"
      - "config:app:set theming iTunesAppId --value '1125420102'"

- name: Nextcloud | Install | Maintenance Update htaccess
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ maintenance:update:htaccess"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Office | Collabora
  ansible.builtin.import_tasks:
      file: tasks/nextcloud/install_collabora.yml

- name: Nextcloud | Install | Create systemd unit file for nextcloud cron
  ansible.builtin.template:
      dest: "/etc/systemd/system/{{ cs_nc_cron_system_timer_name }}.service"
      src: "templates/nc/{{ cs_nc_cron_system_timer_name }}.service.j2"
      mode: "0644"

- name: Nextcloud | Install | Create systemd timmer file for nextcloud cron
  ansible.builtin.copy:
      dest: "/etc/systemd/system/{{ cs_nc_cron_system_timer_name }}.timer"
      src: files/nc/{{ cs_nc_cron_system_timer_name }}.timer
      mode: "0644"
      remote_src: false

- name: Nextcloud | Install | Enable systemd timmer for nextcloud cron
  ansible.builtin.systemd_service:
      name: "{{ cs_nc_cron_system_timer_name }}.timer"
      enabled: true
      state: restarted
      daemon_reload: true
