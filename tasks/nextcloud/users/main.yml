---
- name: Nextcloud | Users | Set config facts
  ansible.builtin.set_fact:
      cs_nc_admin_user: "{{ __nextcloud_app_details.admin_user }}"
      cs_nc_users_dict: "{{ __nextcloud_app_details.users_dict }}"
  vars:
      __nextcloud_app_details: "{{ lookup('lab_secrets', 'secret/' + cs_nc_cluster_name + '/' + inventory_hostname
          + '/nextcloud') }}"

- name: Nextcloud | Users | Test
  ansible.builtin.import_tasks:
      file: tasks/nextcloud/users/test.yml

- name: Nextcloud | Users | Create
  ansible.builtin.import_tasks:
      file: tasks/nextcloud/users/create.yml

- name: Nextcloud | Users | Set all groups list from all users
  ansible.builtin.set_fact:
      all_user_groups: "{{ all_user_groups | default([]) + (item | flatten | unique) }}"
  loop: "{{ cs_nc_users_dict | community.general.json_query('*.groups') | flatten | unique }}"

- name: Nextcloud | Users | Get all existing groups in Nextcloud
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ group:list --output=json"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: false
  when: all_user_groups is defined and all_user_groups | length > 0
  register: nextcloud_all_existing_groups

- name: Nextcloud | Users | Create groups if not exists
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ group:add '{{ item }}'"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  loop: "{{ all_user_groups }}"
  when: >
      all_user_groups is defined and all_user_groups | length > 0
      and
      item not in nextcloud_all_existing_groups.stdout | from_json

- name: Nextcloud | Users | Groups Manage
  ansible.builtin.include_tasks:
      file: tasks/nextcloud/users/groups.yml
  with_items: "{{ cs_nc_users_dict | dict2items }}"
  vars:
      cs_nc_user_name: "{{ item.key }}"
      cs_nc_user_details: "{{ item.value }}"

- name: Nextcloud | Users | Disable
  ansible.builtin.import_tasks:
      file: tasks/nextcloud/users/disable.yml
