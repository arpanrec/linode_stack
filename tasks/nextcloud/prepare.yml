---
- name: Nextcloud | Prepare | Get Public Ingress IP and Hostname from vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      engine_mount_point: "secret"
      path: "blr-home-lab"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
  register: __nextcloud_server_public_ingress_secret_dict
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Nextcloud | Prepare | Set fact Public Ingress IP and Hostname
  ansible.builtin.set_fact:
      cs_public_ingress_ip: "{{ __nextcloud_server_public_ingress_secret_dict.secret.public_ingress_ip }}"
      cs_public_ingress_dns_entry: "{{ __nextcloud_server_public_ingress_secret_dict.secret.public_ingress_dns_entry }}"

- name: Nextcloud | Prepare | Get Config details
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: "blr-home-lab/{{ inventory_hostname }}/nextcloud"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
      engine_mount_point: "secret"
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"
  register: __nextcloud_app_details

- name: Nextcloud | Prepare | Set config facts
  ansible.builtin.set_fact:
      cs_nc_port: "{{ __nextcloud_app_details.secret.port }}"

- name: Nextcloud | Prepare | Install Packages
  ansible.builtin.apt:
      state: present
      name:
          - ffmpeg
          - libvips-dev
          - libvips42
          - libsystemd-dev
          - imagemagick
          - python3-requests
          - memcached
          - libmagickcore-6.q16-6-extra

- name: Nextcloud | Prepare | Change ImageMagick policy
  ansible.builtin.replace:
      path: /etc/ImageMagick-6/policy.xml
      regexp: 'rights="none" pattern="{{ item }}"'
      replace: 'rights="read|write" pattern="{{ item }}"'
      backup: true
      owner: root
      group: root
      mode: "0644"
  with_items:
      - "PNG"
      - "PDF"
      - "XPS"
      - "EPS"
      - "PS2"
      - "PS"
      - "PS3"

- name: Nextcloud | Prepare | Enable Local Memcached
  ansible.builtin.systemd_service:
      name: memcached
      enabled: true
      state: started

- name: Nextcloud | Prepare | Download Debian PHP Repository gpg key
  ansible.builtin.get_url:
      url: "https://packages.sury.org/php/apt.gpg"
      dest: "/etc/apt/trusted.gpg.d/php.gpg"
      mode: "0644"
      owner: root
      group: root
- name: Nextcloud | Prepare | Gather Facts
  ansible.builtin.setup:

- name: Nextcloud | Prepare | Add PHP Repository
  ansible.builtin.apt_repository:
      repo: "deb [signed-by=/etc/apt/trusted.gpg.d/php.gpg] https://packages.sury.org/php/
          {{ ansible_distribution_release }} main"
      state: present
      filename: "php"
      update_cache: true

- name: Nextcloud | Prepare | Install php packages for {{ cs_nc_php_version }}
  ansible.builtin.apt:
      name:
          - php{{ cs_nc_php_version }}
          - php{{ cs_nc_php_version }}-cli
          - php{{ cs_nc_php_version }}-curl
          - php{{ cs_nc_php_version }}-gd
          - php{{ cs_nc_php_version }}-bz2
          - php{{ cs_nc_php_version }}-mbstring
          - php{{ cs_nc_php_version }}-intl
          - php{{ cs_nc_php_version }}-xml
          - php{{ cs_nc_php_version }}-zip
          - php{{ cs_nc_php_version }}-common
          - php{{ cs_nc_php_version }}-pgsql
          - php{{ cs_nc_php_version }}-ldap
          - php{{ cs_nc_php_version }}-smbclient
          - php{{ cs_nc_php_version }}-imap
          - php{{ cs_nc_php_version }}-bcmath
          - php{{ cs_nc_php_version }}-gmp
          - php{{ cs_nc_php_version }}-imagick
          - php{{ cs_nc_php_version }}-redis
          - php{{ cs_nc_php_version }}-apcu
          - php{{ cs_nc_php_version }}-opcache
          - php{{ cs_nc_php_version }}-igbinary
          - php{{ cs_nc_php_version }}-memcached
          - php{{ cs_nc_php_version }}-soap
          - php{{ cs_nc_php_version }}-xmlrpc
          - php{{ cs_nc_php_version }}-mysql
          - php{{ cs_nc_php_version }}-dev
          - php{{ cs_nc_php_version }}-imagick
          - php{{ cs_nc_php_version }}-fpm
      install_recommends: true

- name: Nextcloud | Prepare | Install Apache2
  ansible.builtin.apt:
      name:
          - apache2
          - apache2-utils
          - libapache2-mod-php{{ cs_nc_php_version }}
      install_recommends: true

- name: Nextcloud | Prepare | Change PHP ini settings
  community.general.ini_file:
      path: "{{ item.path }}"
      section: "{{ item.section | default('') }}"
      option: "{{ item.option }}"
      value: "{{ item.value }}"
      mode: "0644"
      owner: root
      group: root
      create: false
      no_extra_spaces: "{{ item.no_extra_spaces | default(true) }}"
  with_items:
      - path: /etc/php/{{ cs_nc_php_version }}/fpm/php.ini
        section: PHP
        option: memory_limit
        value: 1024M
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/apache2/php.ini
        section: PHP
        option: memory_limit
        value: 1024M
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/fpm/pool.d/www.conf
        section: www
        option: env[HOSTNAME]
        value: $HOSTNAME
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/fpm/pool.d/www.conf
        section: www
        option: env[PATH]
        value: /usr/local/bin:/usr/bin:/bin
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/fpm/pool.d/www.conf
        section: www
        option: env[TMP]
        value: /tmp
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/fpm/pool.d/www.conf
        section: www
        option: env[TMPDIR]
        value: /tmp
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/fpm/pool.d/www.conf
        section: www
        option: env[TEMP]
        value: /tmp
        no_extra_spaces: false
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/apcu.ini
        option: extension
        value: apcu.so
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/apcu.ini
        option: apc.enable_cli
        value: 1
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: zend_extension
        value: opcache.so
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.enable
        value: 1
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.enable_cli
        value: 1
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.revalidate_freq
        value: 60
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.validate_timestamps
        value: 0
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.save_comments
        value: 1
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.jit
        value: 1255
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.jit_buffer_size
        value: 128M
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.interned_strings_buffer
        value: 64
      - path: /etc/php/{{ cs_nc_php_version }}/mods-available/opcache.ini
        option: opcache.memory_consumption
        value: 256

- name: Nextcloud | Prepare | Create SSL Directory
  when: cs_nc_protocol == "https"
  ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: "0750"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
  with_items:
      - "{{ cs_nc_cert_privkey_file | dirname }}"
      - "{{ cs_nc_cert_cert_file | dirname }}"
      - "{{ cs_nc_cert_chain_file | dirname }}"

- name: Nextcloud | Prepare | Get Server Certificates from Vault
  become: false
  when: cs_nc_protocol == "https"
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: pki/issue/server_certificate
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
      data:
          common_name: "{{ cs_public_ingress_dns_entry }}"
          alt_names: "{{ cs_public_ingress_dns_entry }},localhost,{{ ansible_hostname }},{{ ansible_fqdn }}"
          # Because in the inv plugin ansible host hast to be a ip
          ip_sans: "{{ ([ansible_host, cs_public_ingress_ip, '127.0.0.1']
              + ansible_all_ipv4_addresses) | join(',') }}"
  register: __nextcloud_server_cert
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Nextcloud | Prepare | Write Server Certificate
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      mode: "0600"
  loop:
      - content: "{{ __nextcloud_server_cert.data.data.certificate }}\n\
            {{ __nextcloud_server_cert.data.data.ca_chain | join('\n') }}"
        dest: "{{ cs_nc_cert_cert_file }}"
      - content: "{{ __nextcloud_server_cert.data.data.private_key }}"
        dest: "{{ cs_nc_cert_privkey_file }}"
      - content: "{{ __nextcloud_server_cert.data.data.ca_chain | join('\n') }}"
        dest: "{{ cs_nc_cert_chain_file }}"

- name: Nextcloud | Prepare | Create Apache2 config
  ansible.builtin.template:
      src: templates/nc/{{ cs_nc_apache_template_name }}.conf.j2
      dest: "/etc/apache2/sites-available/{{ cs_nc_apache_template_name }}.conf"
      mode: "0640"
      owner: root
      group: root

- name: Nextcloud | Prepare | Create DocumentRoot
  ansible.builtin.file:
      path: "{{ cs_nc_web_dir }}"
      state: directory
      mode: "0750"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"

- name: Nextcloud | Prepare | Enable Apache2 Modules
  community.general.apache2_module:
      name: "{{ item }}"
      state: present
  with_items:
      - proxy_fcgi
      - setenvif
      - rewrite
      - headers
      - env
      - dir
      - mime
      - ssl
      - socache_shmcb

- name: Nextcloud | Prepare | Enable Apache2 config for PHP
  ansible.builtin.command:
      cmd: a2enconf php{{ cs_nc_php_version }}-fpm
  changed_when: true

- name: Nextcloud | Prepare | Enable Apache2 site for Nextcloud and SSL
  ansible.builtin.command:
      cmd: a2ensite default-ssl {{ cs_nc_apache_template_name }}
  changed_when: true

- name: Nextcloud | Prepare | Create php systemd fpm override directory
  ansible.builtin.file:
      path: /etc/systemd/system/php{{ cs_nc_php_version }}-fpm.service.d
      state: directory
      mode: "0755"
      owner: root
      group: root

- name: Nextcloud | Prepare | Create php systemd fpm override config for run directory
  ansible.builtin.template:
      src: templates/nc/php-systemd-override.conf.j2
      dest: "/etc/systemd/system/php{{ cs_nc_php_version }}-fpm.service.d/override.conf"
      mode: "0644"
      owner: root
      group: root

- name: Nextcloud | Prepare | Restart apache2 and php-fpm
  ansible.builtin.systemd_service:
      name: "{{ item }}"
      enabled: true
      state: restarted
      daemon_reload: true
  with_items:
      - apache2
      - php{{ cs_nc_php_version }}-fpm
