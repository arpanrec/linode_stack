---
- name: Patch | System | Create wheel group
  ansible.builtin.group:
      name: wheel
      state: present

- name: Patch | System | Make sure zsh is installed
  ansible.builtin.apt:
      name: zsh
      state: present
      update_cache: true

- name: Patch | System | Create ssh user when expected user is not root
  when: cs_vm_ssh_service_user_id != "root"
  ansible.builtin.import_role:
      name: arpanrec.nebula.user_add
  vars:
      user_add_rv_username: "{{ cs_vm_ssh_service_user_id }}"
      user_add_rv_user_default_shell: "/bin/zsh"
      user_add_rv_user_extra_groups: ["wheel"]
      user_add_rv_ssh_access_public_key_content_list:
          - "{{ ansible_ssh_public_key_content }}"

- name: Patch | System | Linux Patching
  ansible.builtin.import_role:
      name: arpanrec.nebula.linux_patching
  vars:
      linux_patching_rv_extra_packages:
          - python3-docker
          - python3-cryptography
          - davfs2
      linux_patching_rv_install_devel_packages: false
      linux_patching_rv_root_ca_pem_content: "{{ root_ca_cert_pem }}"
      linux_patching_rv_domain_name: "blr-home.arpanrec.com"

- name: Patch | System | Fail if service user is root
  ansible.builtin.fail:
      msg: "Service user should be {{ cs_vm_ssh_service_user_id }} and not root"
  when: >
      cs_vm_ssh_service_user_id == "root"
      or
      ansible_user != cs_vm_ssh_service_user_id

- name: Patch | System | SSH Hardening
  ansible.builtin.import_role:
      name: arpanrec.nebula.ssh_hardening

- name: Patch | System | Install Docker
  ansible.builtin.import_role:
      name: geerlingguy.docker
  vars:
      docker_users:
          - "{{ cs_vm_ssh_service_user_id }}"

- name: Patch | System | Flush Handlers after root tasks
  ansible.builtin.meta: flush_handlers
