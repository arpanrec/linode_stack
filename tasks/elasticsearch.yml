---
- name: Database | Elasticsearch | Gather Facts
  ansible.builtin.setup:
      gather_subset: all

- name: Database | Elasticsearch | Get config from Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: "{{ cs_elasticsearch_cluster_name }}/{{ inventory_hostname }}/elasticsearch"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
      engine_mount_point: "secret"
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"
  register: __elasticsearch_config

- name: Database | Elasticsearch | Set config facts
  ansible.builtin.set_fact:
      cs_elasticsearch_servlet_port: "{{ __elasticsearch_config.secret.servlet_port }}"
      cs_elasticsearch_transport_port: "{{ __elasticsearch_config.secret.transport_port }}"
      cs_elasticsearch_root_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=40,
          chars=['ascii_letters', 'digits']) }}"

- name: Database | Elasticsearch | Write the Password to Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_write:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: "elasticsearch/clusters/{{ cs_elasticsearch_cluster_name }}/servers/{{ inventory_hostname }}/config"
      token: "{{ vault_ha_client.token }}"
      validate_certs: true
      engine_mount_point: "managed-secrets"
      data:
          servlet_port: "{{ cs_elasticsearch_servlet_port }}"
          transport_port: "{{ cs_elasticsearch_transport_port }}"
          root_password: "{{ cs_elasticsearch_root_password }}"
          ipv4s: "{{ ansible_all_ipv4_addresses }}"
          hostname: "{{ ansible_hostname }}"
          fqdn: "{{ ansible_fqdn }}"
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Database | Elasticsearch | Stop old container
  community.docker.docker_container:
      name: "{{ cs_elasticsearch_docker_container_name }}"
      state: absent
      force_kill: true

- name: Database | Elasticsearch | Create Data Directory
  ansible.builtin.file:
      path: "{{ cs_elasticsearch_data_dir }}"
      state: directory
      mode: "0777"
      owner: "{{ cs_elasticsearch_run_user_id }}"
      group: "{{ cs_elasticsearch_run_group_id }}"

- name: Database | Elasticsearch | Start Container
  community.docker.docker_container:
      name: "{{ cs_elasticsearch_docker_container_name }}"
      image: "{{ cs_elasticsearch_docker_image }}:{{ cs_elasticsearch_docker_image_tag }}"
      user: "{{ cs_elasticsearch_run_user_id }}:{{ cs_elasticsearch_run_group_id }}"
      volumes:
          - "{{ cs_elasticsearch_data_dir }}:/usr/share/elasticsearch/data:rw"
      ports:
          - "{{ cs_elasticsearch_servlet_port }}:{{ cs_elasticsearch_servlet_port }}"
          - "{{ cs_elasticsearch_transport_port }}:{{ cs_elasticsearch_transport_port }}"
      state: started
      restart_policy: unless-stopped
      env:
          TZ: Asia/Kolkata
          "discovery.type": "single-node"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          "node.name": "es01"
          "cluster.name": docker-cluster
          "bootstrap.memory_lock": "true"
          "http.port": "{{ cs_elasticsearch_servlet_port | string }}"
          "xpack.license.self_generated.type": basic
          "xpack.security.enabled": "false"
          "transport.port": "{{ cs_elasticsearch_transport_port | string }}"
          "logger.org.elasticsearch.discovery": WARN
          ELASTIC_CONTAINER: "true"
          FULLTEXTSEARCH_PASSWORD: "{{ cs_elasticsearch_root_password }}"
      ulimits:
          - "memlock:-1:-1"

- name: Database | Elasticsearch | Enable UFW port
  community.general.ufw:
      rule: allow
      proto: tcp
      port: "{{ item.port }}"
      state: enabled
      comment: "Allow Elasticsearch {{ item.comment }} port, Managed by Ansible home-lab playbook."
  with_items:
      - port: "{{ cs_elasticsearch_servlet_port }}"
        comment: "servlet"
      - port: "{{ cs_elasticsearch_transport_port }}"
        comment: "transport"

- name: Database | Elasticsearch | Wait for service to start
  ansible.builtin.uri:
      url: "http://elastic:{{ cs_elasticsearch_root_password }}@{{ ansible_all_ipv4_addresses[0] }}:{{
          cs_elasticsearch_servlet_port }}"
      method: GET
      status_code: [200]
      timeout: 3
      return_content: true
  register: cs_nc_fulltextsearch_status
  until: cs_nc_fulltextsearch_status.status == 200
  retries: 30
  delay: 3
