---
name: Ansible Lint

"on":
    push:
    workflow_dispatch:
    pull_request:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    ansible-lint:
        timeout-minutes: 60
        cancel-timeout-minutes: 60
        runs-on: ubuntu-24.04
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.11", "3.12", "3.13"]
        name: ansible-lint
        steps:
            - name: Checkout
              uses: actions/checkout@v4.2.2

            - name: Install poetry 1.8.5
              run: pipx install poetry==1.8.5

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5.3.0
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: "poetry"
                  cache-dependency-path: poetry.lock

            - name: Cache ansible
              uses: actions/cache@v4.1.2
              with:
                  path: |
                      ~/.ansible
                      ~/.cache/ansible-*
                  key: ansible-cache-py.${{ matrix.python-version }}-${{ hashFiles('**/requirements.yml') }}

            - name: Install dependencies
              run: |+
                  poetry install
                  ansible-galaxy install -r requirements.yml

            - name: Analysing the code with ansible-lint
              run: |+
                  echo "${INVENTORY_YAML}" | tee inventory.yml > /dev/null
                  poetry run ansible-lint
              env:
                  INVENTORY_YAML: "${{ secrets.INVENTORY_YAML }}"
