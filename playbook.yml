---
- name: Access Key
  hosts: all
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tags: always
  serial: 1
  tasks:
      - name: Access Key | Create directory # noqa: run-once[task]
        delegate_to: localhost
        become: false
        run_once: true
        ansible.builtin.file:
            path: "{{ ansible_ssh_private_key_file | dirname }}"
            state: directory
            mode: "0700"

      - name: Access Key | Write SSH Private Key # noqa: run-once[task]
        delegate_to: localhost
        become: false
        run_once: true
        ansible.builtin.copy:
            content: "{{ root_ca_key_pem
                | unencrypted_openssh_priv_key_from_encrypted_pem_priv_key(password=root_ca_key_password) }}"
            mode: "0600"
            dest: "{{ ansible_ssh_private_key_file }}"

- name: Patch
  hosts: patchservers
  become: true
  become_user: root
  gather_facts: false
  no_log: "{{ cs_no_log | default('true') }}"
  tags: never,patch
  tasks:
      - name: Patch | System
        ansible.builtin.import_tasks:
            file: tasks/patch/system.yml

- name: MinIO | KES
  hosts: minio_kes
  become: false
  gather_facts: false
  tags: never,minio,minio_kes
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: MinIO | KES
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/minio_kes.yml

- name: MinIO | S3
  hosts: minio_s3
  become: false
  gather_facts: false
  tags: never,minio,minio_s3
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: MinIO | S3
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/minio_s3.yml

- name: Postgres
  hosts: postgres
  become: true
  become_user: root
  gather_facts: false
  tags: never,postgres
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Postgres
        ansible.builtin.import_tasks:
            file: tasks/postgres.yml

- name: Redis
  hosts: redis
  become: true
  become_user: root
  gather_facts: false
  no_log: "{{ cs_no_log | default('true') }}"
  tags: never,redis
  tasks:
      - name: Redis
        ansible.builtin.import_tasks:
            file: tasks/redis.yml

- name: Elasticsearch
  hosts: elasticsearch
  become: true
  become_user: root
  gather_facts: false
  tags: never,elasticsearch
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Elasticsearch
        ansible.builtin.import_tasks:
            file: tasks/elasticsearch.yml

- name: Mysql
  hosts: mysql
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Mysql
        become: true
        become_user: root
        tags: never,mysql
        ansible.builtin.import_tasks:
            file: tasks/mysql.yml

- name: Nextcloud
  hosts: nextcloud
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Nextcloud | Test cs_nc_protocol
        tags: never,nextcloud
        ansible.builtin.assert:
            that:
                - "cs_nc_protocol in ['http', 'https']"
            fail_msg: "cs_nc_protocol must be either 'http' or 'https'"
            success_msg: "cs_nc_protocol is valid"

      - name: Nextcloud | Prepare
        tags: never,nextcloud,nextcloud_prepare
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/prepare.yml

      - name: Nextcloud | Install
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_install
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/install.yml

      - name: Nextcloud | Admin
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_admin
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/admin.yml

      - name: Nextcloud | Cache
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_cache
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/cache.yml

      - name: Nextcloud | Mount Disk
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_mount
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/mount.yml

      - name: Nextcloud | Imaginary
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_imaginary
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/imaginary.yml

      - name: Nextcloud | Full Text Search
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_fulltextsearch
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/fulltextsearch.yml

      - name: Nextcloud | Hub Bundle
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_hub_bundle
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/hub_bundle.yml

      - name: Nextcloud | Users
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_users
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/users/main.yml

      - name: Nextcloud | Post Install
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_post_install
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/post-install.yml

      - name: Nextcloud | Dump
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_dump
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/dump.yml

- name: Jellyfin
  hosts: s1-home
  become: false
  gather_facts: false
  tags: never,jellyfin
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Jellyfin
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/jellyfin.yml

- name: Nginx Proxy Manager
  hosts: nginx_proxy_manager
  become: true
  become_user: root
  gather_facts: false
  tags: never,nginx_proxy_manager
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Nginx Proxy Manager
        ansible.builtin.import_tasks:
            file: tasks/nginx_proxy_manager/main.yml
# - name: Collabora
#   hosts: rb4-m2
#   become: false
#   gather_facts: false
#   no_log: "{{ cs_no_log | default('true') }}"
#   tasks:
#       - name: Collabora
#         tags: never,collabora
#         become: true
#         become_user: root
#         ansible.builtin.import_tasks:
#             file: tasks/collabora.yml
